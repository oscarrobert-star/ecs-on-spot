AWSTemplateFormatVersion: "2010-09-09"
Description: AWS Code pipeline for API Service

Parameters:
  ArtifactStoreS3Location:
    Type: String
    Default: ajua-platform-cicd-artifact-storage
    Description: S3 bucket for artifact storage

  GitHubOwner:
    Type: String
    Default: ajua-labs

  OAuthToken:
    Type: String
    Default: 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
    NoEcho: true

  RepositoryName:
    Type: String
    Default: API-Service

  BranchName:
    Type: String
    Default: master       

  ApplicationName:
    Type: String
    Default:  API_Service

  DeploymentGroupName: 
    Type: String
    Default: Api_service_dpg
    
  AutoScalingGroups:
    Type: String
    Default: ApiServiceASG

  TargetGroupName:
    Type: String
    Default: ApiServiceTG  

  DeploymentConfigName:
    Type: String
    Default: CodeDeployDefault.OneAtATime 
    AllowedValues: ['CodeDeployDefault.OneAtATime','CodeDeployDefault.HalfAtATime','CodeDeployDefault.AllAtOnce']  

Resources:
  ServiceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - codebuild.amazonaws.com
                - codepipeline.amazonaws.com
                - codedeploy.amazonaws.com
            Action:
              - sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AdministratorAccess

  BuildProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: !Join ['_', [!Ref ApplicationName, BuildProject]]
      Description: A description about my project
      ServiceRole: !Ref ServiceRole
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/standard:4.0
        EnvironmentVariables:
          - Name: GH_USERNAME
            Type: PLAINTEXT
            Value: ajua-team
          - Name: GITHUB_TOKEN
            Type: PLAINTEXT
            Value: !Ref OAuthToken #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
          - Name: GITHUB_USERNAME
            Type: PLAINTEXT
            Value: ajua-team  

      Artifacts:
        Type: CODEPIPELINE
      Source:
        Type: CODEPIPELINE
      TimeoutInMinutes: 10       

  DeployApplication:
    Type: AWS::CodeDeploy::Application
    Properties:
      ApplicationName: !Ref ApplicationName
      ComputePlatform: Server
      
  DeploymentGroup:
    Type: AWS::CodeDeploy::DeploymentGroup
    Properties:
      ApplicationName: !Ref ApplicationName
      DeploymentGroupName: !Ref DeploymentGroupName
      DeploymentConfigName: !Ref DeploymentConfigName 
      # DeploymentStyle:
        # DeploymentOption: WITH_TRAFFIC_CONTROL
        # DeploymentType: BLUE_GREEN
      AutoScalingGroups: 
        - !Ref AutoScalingGroups
      BlueGreenDeploymentConfiguration:
        GreenFleetProvisioningOption: 
          Action: COPY_AUTO_SCALING_GROUP
        DeploymentReadyOption:
          ActionOnTimeout: CONTINUE_DEPLOYMENT
        TerminateBlueInstancesOnDeploymentSuccess: 
          Action: TERMINATE        
      ServiceRoleArn: !GetAtt ServiceRole.Arn
      # LoadBalancerInfo:
      #   TargetGroupInfoList:
      #     - Name: !Ref TargetGroupName
          

  Pipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties: 
      Name: !Join ['_', [!Ref ApplicationName, Pipeline]] 
      RoleArn: !GetAtt ServiceRole.Arn
      ArtifactStore: 
        Type: S3 
        Location:
          Ref: ArtifactStoreS3Location 
      Stages:
        - Name: Source
          Actions:
            - Name: SourceAction
              ActionTypeId:
                Category: Source
                Owner: ThirdParty
                Version: 1
                Provider: GitHub
              Configuration:
                Owner: !Ref GitHubOwner
                Repo: !Ref RepositoryName
                Branch: !Ref BranchName
                OAuthToken: !Ref OAuthToken #{{resolve:secretsmanager:MyGitHubSecret:SecretString:token}}
                PollForSourceChanges: false
              RunOrder: 1
              OutputArtifacts:
                - Name: SourceCode 

        - Name: Build
          Actions:
            - Name: BuildAction
              InputArtifacts:
                - Name: SourceCode
              ActionTypeId:
                Category: Build 
                Owner: AWS
                Version: 1
                Provider: CodeBuild
              Configuration:
                ProjectName:
                  Ref: BuildProject
              RunOrder: 1    
              OutputArtifacts:
                - Name: buildfile

        - Name: Deploy
          Actions:
            - Name: DeployAction
              InputArtifacts:
                - Name: buildfile
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Version: 1 
                Provider: CodeDeploy
              Configuration:
                ApplicationName: !Ref ApplicationName
                DeploymentGroupName: !Ref DeploymentGroupName 
              RunOrder: 1  

  PipelineWebhook:
    Type: AWS::CodePipeline::Webhook
    Properties:
      Name: !Join ['_', [!Ref ApplicationName, PipelineWebhook]]
      AuthenticationConfiguration: 
        SecretToken: !Ref OAuthToken
      Authentication: GITHUB_HMAC
      TargetPipeline: !Ref Pipeline
      TargetAction: SourceAction
      TargetPipelineVersion: !GetAtt Pipeline.Version
      RegisterWithThirdParty: 'true'
      Filters: 
      - JsonPath: "$.ref" 
        MatchEquals: refs/heads/{Branch} 
      - JsonPath: "$.ref"
        MatchEquals: refs/heads/FEATURE-*
      - JsonPath: "$.ref"
        MatchEquals: refs/heads/HOTFIX-*  
      - JsonPath: "$.ref"
        MatchEquals: refs/tag/FEATURE-* 