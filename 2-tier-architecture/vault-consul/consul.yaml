AWSTemplateFormatVersion: "2010-09-09"
Description: Defines Ajua Consul system 

Parameters:
  VPCId:
    Type: AWS::EC2::VPC::Id
    Description: Provide VPC id where the Security groups should be created

  VPCCidr:
    Type: String
    Description: The CIDR block for the VPC.
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/([0-9]|[1-2][0-9]|3[0-2]))$
    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/16-28
    Default: 10.0.0.0/16  

  AmiID:
    Type: AWS::EC2::Image::Id
    Description: 'The ID of the AMI.' # uses the latest ami id  
    Default: 'ami-0439e38cc09834325'

  EC2InstanceType:
    Type: String
    Description: Provide the desired instance type
    Default: t3.nano 
  
  KeyName: 
    Type: String
    Default: core-platform-key #this key exists in Ajua account af-south-1 region 

  Subnet1:  
    Type: AWS::EC2::Subnet::Id
    Description: 'The Subnet ID'

  Subnet2:  
    Type: AWS::EC2::Subnet::Id
    Description: 'The Subnet ID'   

  # OperatorEMail:
  #   Description: EMail address to notify if there are any scaling operations
  #   Type: String
  #   AllowedPattern: ([a-zA-Z0-9_\-\.]+)@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.)|(([a-zA-Z0-9\-]+\.)+))([a-zA-Z]{2,4}|[0-9]{1,3})(\]?)
  #   ConstraintDescription: must be a valid email address.  
  #   Default: testsoscar@gmail.com
  #   Type: String
  #   Default: '80'

  # CPUPolicyTargetValue:
  #   Type: String
  #   Default: '80'

Resources:
  # NotificationTopic:
  #     Type: AWS::SNS::Topic
  #     Properties:
  #       Subscription:
  #       - Endpoint: !Ref 'OperatorEMail'
  #         Protocol: email

  consullaunchtemplate:
    Type: AWS::EC2::LaunchTemplate
    Properties:
      LaunchTemplateName: consul-Launch-Template
      LaunchTemplateData:
        InstanceType: 
          Ref: EC2InstanceType
        ImageId: 
          Ref: AmiID
        SecurityGroupIds: #add sg heres
          - Ref: SgId
        IamInstanceProfile: 
          Name: !ImportValue SSMInstanceProfile
        KeyName: !Ref KeyName
        BlockDeviceMappings:
          - Ebs:
              VolumeSize: 30 # put a desired volume
              VolumeType: gp3
            DeviceName: /dev/xvdcz  
        UserData: #add user data here 
          Fn::Base64: |
            #!/bin/bash
            exec > >(tee /var/log/user-data.log|logger -t user-data -s 2>/dev/console) 2>&1
            # install updates
            # yum update -y #for centos
            sudo apt update -y
            
            # configure AWS CLI
            mkdir ~/.aws
            cat > ~/.aws/config<< EOF
            [default]
            region = ${AWS::Region}
            EOF

            sudo /opt/consul/bin/run-consul --server --cluster-tag-key "Consul" --cluster-tag-value "Consul" 

            sudo apt install snapd -y
            sudo snap install amazon-ssm-agent --classic -y


  consulASG:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties: 
      AutoScalingGroupName: consulASG
      MinSize: "1"
      MaxSize: "5"
      DesiredCapacity: "3"       
      HealthCheckGracePeriod: 300
      LaunchTemplate:
        LaunchTemplateId: 
          Ref: consullaunchtemplate
        Version: !GetAtt consullaunchtemplate.LatestVersionNumber
      # NewInstancesProtectedFromScaleIn: true  
      VPCZoneIdentifier:
        - Ref: Subnet1
        - Ref: Subnet2
      # TargetGroupARNs: 
      #   - !Ref TargetGroupARNs
      Tags:
      -   Key: Name
          PropagateAtLaunch: true
          Value: consul-servers
      -   Key: Consul
          PropagateAtLaunch: true
          Value: Consul

      # NotificationConfigurations:
      #   - TopicARN: !Ref 'NotificationTopic'
      #     NotificationTypes: ['autoscaling:EC2_INSTANCE_LAUNCH', 'autoscaling:EC2_INSTANCE_LAUNCH_ERROR',
      #       'autoscaling:EC2_INSTANCE_TERMINATE', 'autoscaling:EC2_INSTANCE_TERMINATE_ERROR']
      
  # consulScalingPolicy:
  #   Type: AWS::AutoScaling::ScalingPolicy
  #   Properties:
  #     AutoScalingGroupName: !Ref consulASG
  #     PolicyType: TargetTrackingScaling
  #     TargetTrackingConfiguration: 
  #       PredefinedMetricSpecification:
  #         PredefinedMetricType: ASGAverageCPUUtilization
  #       TargetValue: !Ref CPUPolicyTargetValue        

  SgId: 
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow http and https access into bridge
      VpcId: 
        Ref: VPCId
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: 8300
        ToPort: 8600
        CidrIp: !Ref VPCCidr 

      