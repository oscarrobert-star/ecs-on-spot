---
AWSTemplateFormatVersion: '2010-09-09'
Description: 'Ajua redis cluster (minimal, a lot more featues can be added)'
Parameters:
  VPCId:
    Type: 'AWS::EC2::VPC::Id'
  Subnet1:
    Type: 'AWS::EC2::Subnet::Id' #use rds subnets (Data later)
  Subnet2:
    Type: 'AWS::EC2::Subnet::Id' #use rds subnets (Data later)
  # KeyName:
  #   Type: 'AWS::EC2::KeyPair::KeyName'
  #   Default: mykey
  SgId: 
    Type: AWS::EC2::SecurityGroup::Id #Input from SG stack  

Resources:
  # CacheSecurityGroup:
  #   Type: 'AWS::EC2::SecurityGroup'
  #   Properties:
  #     GroupDescription: cache
  #     VpcId: !Ref VPCId
  #     SecurityGroupIngress:
  #     - IpProtocol: tcp
  #       FromPort: 6379
  #       ToPort: 6379
  #       CidrIp: '0.0.0.0/0'
  CacheSubnetGroup:
    Type: 'AWS::ElastiCache::SubnetGroup'
    Properties:
      Description: cache
      SubnetIds:
      - Ref: Subnet1
      - Ref: Subnet2
  Cache:
    Type: 'AWS::ElastiCache::CacheCluster'
    Properties:
      CacheNodeType: 'cache.t3.micro'
      CacheSubnetGroupName: !Ref CacheSubnetGroup
      Engine: redis
      NumCacheNodes: 1
      VpcSecurityGroupIds:
      - !Ref SgId

Outputs:
  CacheEndpoint:
    Value: !GetAtt Cache.RedisEndpoint.Address
  CachePort:
    Value: !GetAtt Cache.RedisEndpoint.Port

