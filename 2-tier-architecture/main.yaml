AWSTemplateFormatVersion: "2010-09-09"
Description: The root stack for Nested Stacks

Parameters:
  S3BucketName:
    AllowedPattern: ^[0-9a-zA-Z]+([0-9a-zA-Z-.]*[0-9a-zA-Z])*$
    ConstraintDescription: Bucket name can include numbers, lowercase letters, uppercase letters, periods (.), and hyphens (-). It cannot start or end with a hyphen (-).
    Description: S3 bucket name for the Nested Stacks. S3 bucket name can include numbers, lowercase letters, uppercase letters, and hyphens (-). It cannot start or end with a hyphen (-).
    Type: String
    Default: terraform-backend.ajua.com

  # AvailabilityZones:
  #   Type: List<AWS::EC2::AvailabilityZone::Name>
  #   Description: The list of Availability Zones to use for the subnets in the VPC.

  VPCName:
    Type: String
    Description: The name of the VPC.
    Default: Core-QA-VPC

  VPCCidr:
    Type: String
    Description: The CIDR block for the VPC.
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/([0-9]|[1-2][0-9]|3[0-2]))$
    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/16-28
    Default: 172.0.0.0/16

  PublicSubnet1Cidr:
    Type: String
    Description: The CIDR block for the public subnet located in Availability Zone 1.
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/([0-9]|[1-2][0-9]|3[0-2]))$
    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/16-28
    Default: 172.0.0.0/24

  PublicSubnet2Cidr:
    Type: String
    Description: The CIDR block for the public subnet located in Availability Zone 2.
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/([0-9]|[1-2][0-9]|3[0-2]))$
    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/16-28
    Default: 172.0.1.0/24

  PrivateSubnet1Cidr:
    Type: String
    Description: The CIDR block for the public subnet located in Availability Zone 1.
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/([0-9]|[1-2][0-9]|3[0-2]))$
    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/16-28
    Default: 172.0.100.0/24

  PrivateSubnet2Cidr:
    Type: String
    Description: The CIDR block for the public subnet located in Availability Zone 2.
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/([0-9]|[1-2][0-9]|3[0-2]))$
    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/16-28
    Default: 172.0.101.0/24

  RDSSubnet1Cidr:
    Type: String
    Description: The CIDR block for the public subnet located in Availability Zone 2.
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/([0-9]|[1-2][0-9]|3[0-2]))$
    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/16-28
    Default: 172.0.85.0/24

  RDSSubnet2Cidr:
    Type: String
    Description: The CIDR block for the public subnet located in Availability Zone 2.
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/([0-9]|[1-2][0-9]|3[0-2]))$
    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/16-28
    Default: 172.0.86.0/24

  AmiID:
    Type: AWS::EC2::Image::Id
    Description: 'The ID of the AMI.' # uses the latest ami id
    Default: 'ami-00e7df8df28dfa791'

  EC2InstanceType:
    Type: String
    Description: Provide the desired instance type
    Default: t3.micro

  OperatorEMail:
    Description: EMail address to notify if there are any scaling operations
    Type: String
    AllowedPattern: ([a-zA-Z0-9_\-\.]+)@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.)|(([a-zA-Z0-9\-]+\.)+))([a-zA-Z]{2,4}|[0-9]{1,3})(\]?)
    ConstraintDescription: must be a valid email address.
    Default: oscar.robert@ajua.com

  CPUPolicyTargetValue:
    Type: String
    Default: '80'

  DBName:
    Type: String
    Description: Enter a database name
    Default: africa

  DBAllocatedStorage:
    Type: Number
    Description: The storage amount in GB you want for your database
    Default: "50"

  DBInstanceClass:
    Type: String
    Description: Enter database instance class
    Default: db.t3.small

  Engine:
    Type: String
    Description: Database engine you'd like to run
    Default: postgres

  DBInstanceIdentifier:
    Type: String
    Description: Name to idetify your db instance
    Default: Ajua-QA

  BackupRetentionPeriod:
    Type: Number
    Default: '0'
    Description: Number of days for backup retention (max = 35)

  # RDSSubnet1ID:
  #   Type: AWS::EC2::Subnet::Id
  #   Description: Select subnets for DB. Subnets must be in same VPC

  # RDSSubnet2ID:
  #   Type: AWS::EC2::Subnet::Id
  #   Description: Select subnets for DB. Subnets must be in same VPC

  # RDSSecurityGroup:
  #   Type: AWS::EC2::SecurityGroup::Id
  #   Description: Select security group for DB.

  DBUser:
    Type: String
    Description: Enter DB username
    Default: ajua

  DBPassword:
    Type: String
    Description: Enter database password
    Default: R26sOrpOUK9XlHiMl0ly

  KeyName:
    Type: String
    Default: core-platform-key


Resources:
  VpcStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub https://${S3BucketName}.s3.amazonaws.com/IaC/cf/Network.yaml
      TimeoutInMinutes: 10
      Parameters:

        VPCCidr: !Ref VPCCidr
        VPCName: !Ref VPCName
        PublicSubnet1Cidr: !Ref PublicSubnet1Cidr
        PublicSubnet2Cidr: !Ref PublicSubnet2Cidr
        PrivateSubnet1Cidr: !Ref PrivateSubnet1Cidr
        PrivateSubnet2Cidr: !Ref PrivateSubnet2Cidr
        RDSSubnet1Cidr: !Ref RDSSubnet1Cidr
        RDSSubnet2Cidr: !Ref RDSSubnet2Cidr

  #Security Group stack
  SecurityGroupStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub https://${S3BucketName}.s3.amazonaws.com/IaC/cf/security-groups.yaml
      TimeoutInMinutes: 10
      Parameters:
        VPCId: !GetAtt VpcStack.Outputs.VpcId

  # create elb stack here
  ELBStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub https://${S3BucketName}.s3.amazonaws.com/IaC/cf/elb.yaml
      TimeoutInMinutes: 10
      Parameters:
        VPCId: !GetAtt VpcStack.Outputs.VpcId
        SgId: !GetAtt SecurityGroupStack.Outputs.ElbSGId
        Subnet1: !GetAtt VpcStack.Outputs.BackEndSubnet1
        Subnet2: !GetAtt VpcStack.Outputs.BackEndSubnet2
        SgId: !GetAtt SecurityGroupStack.Outputs.ElbSGId


  # Compute block - Define auto scaling groups here
  BridgeStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub https://${S3BucketName}.s3.amazonaws.com/IaC/cf/bridge_infra.yaml
      TimeoutInMinutes: 10
      Parameters:
        AmiID: !Ref AmiID
        EC2InstanceType: !Ref EC2InstanceType
        SgId: !GetAtt SecurityGroupStack.Outputs.BridgeSecurityGroupId
        Subnet1: !GetAtt VpcStack.Outputs.BackEndSubnet1
        Subnet2: !GetAtt VpcStack.Outputs.BackEndSubnet2
        OperatorEMail: !Ref OperatorEMail
        CPUPolicyTargetValue: !Ref CPUPolicyTargetValue
        TargetGroupARNs: !GetAtt ELBStack.Outputs.BridgeTGArn
        KeyName: !Ref KeyName

  ApiServiceStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub https://${S3BucketName}.s3.amazonaws.com/IaC/cf/api-service.yaml
      TimeoutInMinutes: 10
      Parameters:
        AmiID: !Ref AmiID
        EC2InstanceType: !Ref EC2InstanceType
        SgId: !GetAtt SecurityGroupStack.Outputs.ApiServiceSGId
        Subnet1: !GetAtt VpcStack.Outputs.BackEndSubnet1
        Subnet2: !GetAtt VpcStack.Outputs.BackEndSubnet2
        OperatorEMail: !Ref OperatorEMail
        CPUPolicyTargetValue: !Ref CPUPolicyTargetValue
        TargetGroupARNs: !GetAtt ELBStack.Outputs.ApiServiceTGArn
        KeyName: !Ref KeyName
        LoadBalancer: !GetAtt ELBStack.Outputs.LoadBalancerNames


  EngineStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub https://${S3BucketName}.s3.amazonaws.com/IaC/cf/engine.yaml
      TimeoutInMinutes: 10
      Parameters:
        AmiID: ami-08f4e5fb5d6e0199d
        EC2InstanceType: !Ref EC2InstanceType
        SgId: !GetAtt SecurityGroupStack.Outputs.EngineSGId
        Subnet1: !GetAtt VpcStack.Outputs.BackEndSubnet1
        Subnet2: !GetAtt VpcStack.Outputs.BackEndSubnet2
        OperatorEMail: !Ref OperatorEMail
        CPUPolicyTargetValue: !Ref CPUPolicyTargetValue
        TargetGroupARNs: !GetAtt ELBStack.Outputs.EngineTGArn
        KeyName: !Ref KeyName
        LoadBalancer: !GetAtt ELBStack.Outputs.LoadBalancerNames

  SchedulerStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub https://${S3BucketName}.s3.amazonaws.com/IaC/cf/scheduler.yaml
      TimeoutInMinutes: 10
      Parameters:
        AmiID: !Ref AmiID
        EC2InstanceType: !Ref EC2InstanceType
        SgId: !GetAtt SecurityGroupStack.Outputs.SchedulerSGId
        Subnet1: !GetAtt VpcStack.Outputs.BackEndSubnet1
        Subnet2: !GetAtt VpcStack.Outputs.BackEndSubnet2
        OperatorEMail: !Ref OperatorEMail
        CPUPolicyTargetValue: !Ref CPUPolicyTargetValue
        TargetGroupARNs: !GetAtt ELBStack.Outputs.SchedulerTGArn
        KeyName: !Ref KeyName
        LoadBalancer: !GetAtt ELBStack.Outputs.LoadBalancerNames

  RedisCluster:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL:  !Sub https://${S3BucketName}.s3.amazonaws.com/IaC/cf/redis-cluster.yaml
      TimeoutInMinutes: 10
      Parameters:
        VPCId: !GetAtt VpcStack.Outputs.VpcId
        Subnet1: !GetAtt VpcStack.Outputs.RDSSubnet1
        Subnet2: !GetAtt VpcStack.Outputs.RDSSubnet2
        SgId: !GetAtt SecurityGroupStack.Outputs.CacheSecurityGroupId

  BastionHost:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub https://${S3BucketName}.s3.amazonaws.com/IaC/cf/bastion.yaml
      TimeoutInMinutes: 10
      Parameters:
        AmiID: !Ref AmiID
        EC2InstanceType: t3.nano
        SgId: !GetAtt SecurityGroupStack.Outputs.BastionSGId
        Subnet1: !GetAtt VpcStack.Outputs.FrontEndSubnet1
        Subnet2: !GetAtt VpcStack.Outputs.FrontEndSubnet2
        OperatorEMail: !Ref OperatorEMail
        KeyName: !Ref KeyName

  ConfigServer:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub https://${S3BucketName}.s3.amazonaws.com/IaC/cf/config-server.yaml
      TimeoutInMinutes: 10
      Parameters:
        AmiID: ami-08f4e5fb5d6e0199d
        EC2InstanceType: t3.micro
        SgId: !GetAtt SecurityGroupStack.Outputs.configServerSGId
        Subnet1: !GetAtt VpcStack.Outputs.BackEndSubnet1
        Subnet2: !GetAtt VpcStack.Outputs.BackEndSubnet2
        OperatorEMail: !Ref OperatorEMail
        CPUPolicyTargetValue: !Ref CPUPolicyTargetValue
        KeyName: !Ref KeyName
        TargetGroupARNs: !GetAtt ELBStack.Outputs.ConfigTGArn

  # ############################################ Vault and Consul ########################################################
  # # Vault with consul backend are supposed to be defined here. However, due to the complexity of customizing the existing scripts
  # # within this script, the aforementioned services have been created using terrafom instead. Whenever an update need to be made especially
  # # in this section, check and update the terrform scripts. All files are stored in the same s3 bucket as this file, under tf section. terraform state file
  # # is also included herein
  # ######################################################################################################################

  # Database block - Define the RDS here
  RDSDBStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub https://${S3BucketName}.s3.amazonaws.com/IaC/cf/RDS.yaml
      TimeoutInMinutes: 10
      Parameters:
        DBName: !Ref DBName
        DBAllocatedStorage: !Ref DBAllocatedStorage
        Engine: !Ref Engine
        DBInstanceIdentifier: !Ref DBInstanceIdentifier
        BackupRetentionPeriod: !Ref BackupRetentionPeriod
        RDSSubnet1ID: !GetAtt VpcStack.Outputs.RDSSubnet1
        RDSSubnet2ID: !GetAtt VpcStack.Outputs.RDSSubnet2
        RDSSecurityGroupID: !GetAtt SecurityGroupStack.Outputs.RDSSecurityGroupGroupId
        DBUser: !Ref DBUser
        DBPassword: !Ref DBPassword

  # # Kibana - Elastic search


Outputs:
  ELBEndpoint:
    Value: !GetAtt ELBStack.Outputs.LoadBalancerNames
